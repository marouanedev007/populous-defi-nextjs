// import { createStyled } from "@stitches/react";
//
// import colors from "@/styles/colors";
// import { systemFont } from "@/styles/typography";
//
// import light from "@/styles/themes/light";

// const { styled, css } = createStyled({
//     tokens: {
//         colors: {
//             ...colors,
//             ...light,
//         },
//         fonts: {
//             $system: systemFont,
//         },
//         fontSizes: {
//             $sm: "0.75rem",
//             $md: "0.875rem",
//             $lg: "1rem",
//             $xl: "1.25rem",
//             $xxl: "1.5rem",
//         },
//         radii: {
//             $none: "0px",
//             $sm: "2px",
//             $md: "3px",
//             $lg: "4px",
//             $xl: "6px",
//             $round: "9999px",
//         },
//         shadows: {
//             $0: "none",
//             $1: `0 3px 6px ${colors.$NA8}`,
//             $2: `0 4px 8px ${colors.$NA12}`,
//             $3: `0 12px 24px ${colors.$NA12}, 0 4px 8px ${colors.$NA24}`,
//             $4: `0 16px 32px ${colors.$NA32}, 0 4px 8px ${colors.$NA48}`,
//             $focus: `0 0 0px 3px ${colors.$BA32}`,
//         },
//         zIndices: {
//             $sidebar: "1000",
//             $overlay: "10000",
//             $navbar: "1001",
//             $popover: "2000",
//         },
//     },
//     breakpoints: {
//         mediaPhoneOnly: (rule: string) =>
//             `@media(max-width: 559px) { ${rule} }`,
//         mediaTablet: (rule: string) => `@media(min-width: 600px) { ${rule} }`,
//         mediaSmallDesktop: (rule: string) =>
//             `@media(min-width: 900px) { ${rule} }`,
//         mediaDesktop: (rule: string) => `@media(min-width: 1200px) { ${rule} }`,
//         mediaLargeDesktop: (rule: string) =>
//             `@media(min-width: 1800px) { ${rule} }`,
//     },
// });
//
// css.global({
//     "*": {
//         boxSizing: "border-box",
//     },
//     "html, body, #root": {
//         display: "initial",
//         height: "100%",
//         minHeight: "100%",
//         width: "100vw",
//
//         fontSize: "1rem",
//         lineHeight: 1.71429,
//
//         WebkitTapHighlightColor: colors.$BA32,
//     },
//     body: {
//         margin: 0,
//         WebkitOverflowScrolling: "touch",
//
//         backgroundColor: "$N20",
//         color: "black",
//         overflowY: "auto",
//
//         fontFamily: "$system",
//         fontWeight: 400,
//         textRendering: "optimizeLegibility",
//
//         "&.noscroll": {
//             overflow: "hidden",
//         },
//     },
//     "p, h1, h2, h3, h4, h5": {
//         margin: 0,
//
//         fontSize: "1rem",
//         fontWeight: 400,
//     },
//     small: {
//         fontSize: "$sm",
//     },
//     ul: {
//         margin: 0,
//         padding: 0,
//     },
// })();

// export const lightTheme = css.theme({
//   colors: {
//     $buttonColor: 'yellow'
//   }
// })

// export const darkTheme = css.theme({
//   colors: {
//     $buttonColor: 'red'
//   }
// })

// export const mixinAlpha = (colorName: keyof StyledConfig['tokens']['colors'], alpha: number) => {
//   const hexColor = styledConfig.tokens.colors[colorName]
//   console.log('hexColor', hexColor)

//   const hexParts = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hexColor)

//   const rgbParts = hexParts
//     ? [parseInt(hexParts[1], 16), parseInt(hexParts[2], 16), parseInt(hexParts[3], 16)]
//     : [0, 0, 0]
//   rgbParts.push(alpha / 100)

//   return `rgba(${rgbParts[0]}, ${rgbParts[1]}, ${rgbParts[2]}, ${rgbParts[3]})`
// }

// export { css };
// export default styled;
